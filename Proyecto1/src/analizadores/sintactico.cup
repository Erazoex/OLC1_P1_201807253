package analizadores; 
import java_cup.runtime.*;
import proyecto1.*;
parser code 
{:
    
    public manejoArchivos handler = new manejoArchivos();
    public Repitencia valorEspecifico = new Repitencia();
    public listaVariables listVar =  new listaVariables();
    public int contar = 0;
    public String salida = "";
    public listaGraficaBarras graficasDeBarras = new listaGraficaBarras();
    public graficaBarras barrasAux = new graficaBarras();
    public listaGraficaPie graficasDePie = new listaGraficaPie();
    public graficaPie pieAux = new graficaPie();
    public listaGraficaLineas graficasDeLineas = new listaGraficaLineas();
    public graficaLineas lineasAux = new graficaLineas();

    
    public listaVariables getlistaVariables(){
        return listVar;
    }

    public Repitencia getListaDeValorEspecifico(){
        return valorEspecifico;
    }

    public double getValorEsp(String archivo, String tipo, String id){

        double a = handler.puntajes1.getPuntaje(archivo, tipo, id);
        if (a == 0) {
            a = handler.puntajes2.getPuntaje(archivo, tipo, id);
        }
        return a;
    }
    public String getsalida(){
        return salida;
    }

    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }  
:} 

terminal String definirglobales,id,genreport,obracket,cbracket,comment,multcomment,semicolon,colon,oparent,cparent,integerr,doublee,stringg,equal;
terminal String compare, comma,idstring,iddouble;
terminal String graficabarras,osbracket,csbracket,titulo,ejex,valores,dollar,puntajeespecifico,puntajegeneral,titulox,tituloy,graficapie,graficalineas,archivo;

non terminal String INICIO, REPORTEESTADISTICO, VARIABLES,VARIABLE,VARGLOBAL,TIPO,VALOR, GRAFICA, GRAFICABARRAS, GRAFICAPIE, GRAFICALINEAS, COMPARE;
non terminal String EXPRESION,COMENTARIO,INSTRUCCIONES, INSTRUCCION;
non terminal String ARRAY, ARRAYX;


start with INICIO;

INICIO::= REPORTEESTADISTICO;

REPORTEESTADISTICO::= genreport obracket INSTRUCCIONES cbracket  {: handler.setListaGraficas(graficasDeLineas, graficasDeBarras,graficasDePie); handler.generarGrafica(); :}
                   | COMENTARIO REPORTEESTADISTICO;

INSTRUCCIONES::= INSTRUCCIONES INSTRUCCION
               | INSTRUCCION;

INSTRUCCION::= VARGLOBAL
             | GRAFICA
             | COMENTARIO
             | COMPARE;

GRAFICA::= GRAFICABARRAS
         | GRAFICAPIE
         | GRAFICALINEAS;

GRAFICABARRAS::= graficabarras obracket EXPRESION cbracket;
       

GRAFICAPIE::= graficapie obracket EXPRESION cbracket;
               

GRAFICALINEAS::= graficalineas obracket EXPRESION cbracket;

EXPRESION::= titulo colon VALOR:titulo semicolon ejex colon osbracket ARRAYX:ejex csbracket semicolon valores colon osbracket ARRAY:valores csbracket semicolon titulox colon VALOR:titulox semicolon tituloy colon VALOR:tituloy semicolon {: barrasAux.titulo = titulo; barrasAux.ejex = ejex; barrasAux.valores = valores; barrasAux.titulox = titulox ; barrasAux.tituloy = tituloy; graficasDeBarras.insertarGrafica(barrasAux);:}
           | titulo colon VALOR:titulo semicolon ejex colon osbracket ARRAYX:ejex csbracket semicolon valores colon osbracket ARRAY:valores csbracket semicolon {: pieAux.titulo = titulo; pieAux.ejex = ejex; pieAux.valores = valores; graficasDePie.insertarGrafica(pieAux);:}
           | titulo colon VALOR:titulo semicolon archivo colon VALOR:archivo semicolon {: lineasAux.titulo = titulo; lineasAux.archivo = archivo; graficasDeLineas.insertarGrafica(lineasAux); :}
           | error;

ARRAYX::= ARRAYX:variable comma VALOR:var {: RESULT= variable+ "," + var; :}
        | VALOR:variable {: RESULT= variable; :};

ARRAY::=  ARRAY:variable comma VALOR:var {: puntaje temp = handler.valorE.raiz;
                                            while(temp!= null){
                                                if(var.equals(temp.archivo + "," + temp.tipo + "," + temp.id)){
                                                     var = ""+temp.puntaje;
                                                }
                                                temp = temp.siguiente;
                                            } 
                                            RESULT= variable+","+var;:}
       | VALOR:variable {: puntaje temp = handler.valorE.raiz;
                        while(temp!= null){
                            if(variable.equals(temp.archivo + "," + temp.tipo + "," + temp.id)){
                                 variable = ""+temp.puntaje;
                            }
                            temp = temp.siguiente;
                        }
                        RESULT= variable;  :};


COMPARE::= compare oparent stringg:var1 comma stringg:var2 cparent semicolon {: handler.setArchivos(var1,var2); handler.setListaValorEspecifico(valorEspecifico); handler.puntajeEspecificoFCA(); handler.setListaDeVariables(listVar); handler.convertirPuntajesConSignoDeDollar(); listVar.setValorDollar(handler.valorE); listVar.imprimirVariables(); :};

COMENTARIO::= comment
            | multcomment;

VARGLOBAL::= definirglobales obracket VARIABLES cbracket;

VARIABLES::= VARIABLES VARIABLE
           |VARIABLE
           |VARIABLES COMENTARIO
           |error;

VARIABLE::= TIPO:tipovar id:idvar equal VALOR:valvar semicolon {: listVar.insertarVariable(tipovar,idvar,valvar); :};

TIPO::= idstring
      | iddouble;

VALOR::= id:varid                                                   {: RESULT = listVar.getVar(varid); :}
       | stringg:varstring                                          {: RESULT = varstring.replace("\"",""); :}
       | doublee:vardouble                                          {: RESULT = vardouble; :}
       | integerr:varinteger                                        {: RESULT = varinteger; :}
       | dollar obracket puntajeespecifico comma VALOR:archivo comma VALOR:tipo comma VALOR:id cbracket {: valorEspecifico.insertarPuntaje(archivo,tipo,id,0); RESULT = archivo + "," + tipo + "," + id;  :}
       | dollar obracket puntajegeneral cbracket;
                

